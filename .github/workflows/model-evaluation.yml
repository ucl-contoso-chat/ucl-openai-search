name: Model Evaluation and Red Teaming

on:
  workflow_dispatch:
    inputs:
      azd_env_name:
        description: 'Azure environment name'
        required: false
        type: string
      purge:
        description: 'Whether to purge the deployment after evaluation'
        required: true
        default: false
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  deploy-azure:
    uses: ./.github/workflows/azure-dev.yml
    secrets: inherit
    with:
      azd_env_name: ${{ inputs.azd_env_name || '' }}

  evaluate-models:
    needs: deploy-azure
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.11"]
    env:
      # az/azd credentials
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ inputs.azd_env_name || vars.AZURE_ENV_NAME }}

    steps:
      #--------------------------Setup--------------------------------

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64

      - name: Install azd
        uses: Azure/setup-azd@v1.0.0

      #--------------------------Azure Login--------------------------------

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      #--------------------------Run Evaluation--------------------------------

      - name: Info debug
        run: |
          echo "$GITHUB_ENV"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r evaluation/requirements.txt

      - name: Create evaluation environment
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            ./scripts/create_eval_dotenv.sh
        env:
          AZURE_ENV_NAME: ${{ env.AZURE_ENV_NAME }}

      - name: Generate Q&As
        run: |
          python -m evaluation generate

      - name: Run AI Rag Evaluations
        run: |
          python -m evaluation evaluate

          # Store evaluation results path
          results_path=$(ls -d evaluation/results/gpt_evaluation/experiment-* | tail -n 1)
          echo "EVALUATION_RESULTS=$results_path" >> $GITHUB_ENV

      - name: Run Red Teaming Evaluations
        run: |
          python -m evaluation red-teaming

          # Store red teaming results path
          results_path=$(ls -d evaluation/results/red_teaming/experiment-* | tail -n 1)
          echo "RED_TEAMING_RESULTS=$results_path" >> $GITHUB_ENV"

      - name: Dump results
        uses: actions/upload-artifact@v4
        with:
          name: evaluation-results
          path: |
            ${{ env.EVALUATION_RESULTS }}/summary.json
            ${{ env.EVALUATION_RESULTS }}/eval_results.jsonl
            ${{ env.EVALUATION_RESULTS }}/config.json
            ${{ env.EVALUATION_RESULTS }}/eval.png
            ${{ env.EVALUATION_RESULTS }}/mean_score.png
            ${{ env.EVALUATION_RESULTS }}/passing_rate.png
            ${{ env.RED_TEAMING_RESULTS }}/scores.json

      #--------------------------Cleanup--------------------------------

      - name: Cleanup
        if: ${{ inputs.purge == true }}
        run: azd down --force --purge
