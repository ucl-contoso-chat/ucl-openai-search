name: Full Model Evaluation

on:
  workflow_dispatch:
    inputs:
      azd_env_name:
        description: 'Azure environment name'
        required: false
        type: string
      purge:
        description: 'Whether to purge the deployment after evaluation'
        required: true
        default: false
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
    deploy-azure:
      uses: ./.github/workflows/azure-dev.yml
      secrets: inherit
      with:
        azd_env_name: ${{ inputs.azd_env_name || '' }}

    evaluate-models:
        needs: deploy-azure
        runs-on: ubuntu-latest
        strategy:
          matrix:
            python_version: ["3.11"]
        env:
          # az/azd credentials
          AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          AZURE_ENV_NAME: ${{ inputs.azd_env_name || vars.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}

        steps:
          #--------------------------Setup--------------------------------

          - name: Checkout
            uses: actions/checkout@v4

          - name: Setup python
            uses: actions/setup-python@v5
            with:
              python-version: ${{ matrix.python_version }}
              architecture: x64

          - name: Install azd
            uses: Azure/setup-azd@v1.0.0

          #--------------------------Azure Login--------------------------------

          - name: Azure login
            uses: azure/login@v2
            with:
              client-id: ${{ env.AZURE_CLIENT_ID }}
              tenant-id: ${{ env.AZURE_TENANT_ID }}
              subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

          #--------------------------Run Evaluation--------------------------------

          - name: Info debug
            run: |
              echo "$GITHUB_ENV"

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install -r evaluation/requirements.txt

          - name: Generate Q&As
            run: |
              python -m evaluation generate

          - name: Run AI Rag Evaluations
            run: |
              python -m evaluation evaluate
              echo "EVALUATION_RESULTS=evaluation/results/gpt_evaluation/$(ls evaluation/results/gpt_evaluation | grep "experiment" | tail -n 1)" >> $GITHUB_ENV
            env:
              OPENAI_HOST: ${{ vars.OPENAI_HOST == '' && env.OPENAI_HOST || vars.OPENAI_HOST }}
              AZURE_OPENAI_SERVICE: ${{ vars.AZURE_OPENAI_SERVICE == '' && env.AZURE_OPENAI_SERVICE || vars.AZURE_OPENAI_SERVICE }}
              AZURE_SEARCH_SERVICE: ${{ vars.AZURE_SEARCH_SERVICE == '' && env.AZURE_SEARCH_SERVICE || vars.AZURE_SEARCH_SERVICE }}
              OPENAI_GPT_MODEL: ${{ vars.OPENAI_GPT_MODEL == '' && env.OPENAI_GPT_MODEL || vars.OPENAI_GPT_MODEL }}
              AZURE_OPENAI_EVAL_DEPLOYMENT: ${{ vars.AZURE_OPENAI_EVAL_DEPLOYMENT == '' && env.AZURE_OPENAI_EVAL_DEPLOYMENT || vars.AZURE_OPENAI_EVAL_DEPLOYMENT }}
              AZURE_SEARCH_INDEX: ${{ vars.AZURE_SEARCH_INDEX == '' && env.AZURE_SEARCH_INDEX || vars.AZURE_SEARCH_INDEX }}
              AZURE_PRINCIPAL_ID: ${{ secrets.AZURE_PRINCIPAL_ID == '' && env.AZURE_PRINCIPAL_ID || secrets.AZURE_PRINCIPAL_ID }}

          - name: Run Red Teaming Evaluations
            run: |
              python -m evaluation red-teaming
              echo "RED_TEAMING_RESULTS=evaluation/results/red_teaming/$(ls evaluation/results/red_teaming | grep "experiment" | tail -n 1)" >> $GITHUB_ENV"
            env:
              OPENAI_HOST: ${{ vars.OPENAI_HOST == '' && env.OPENAI_HOST || vars.OPENAI_HOST }}
              AZURE_OPENAI_SERVICE: ${{ vars.AZURE_OPENAI_SERVICE == '' && env.AZURE_OPENAI_SERVICE || vars.AZURE_OPENAI_SERVICE }}
              AZURE_SEARCH_SERVICE: ${{ vars.AZURE_SEARCH_SERVICE == '' && env.AZURE_SEARCH_SERVICE || vars.AZURE_SEARCH_SERVICE }}
              OPENAI_GPT_MODEL: ${{ vars.OPENAI_GPT_MODEL == '' && env.OPENAI_GPT_MODEL || vars.OPENAI_GPT_MODEL }}
              AZURE_SEARCH_INDEX: ${{ vars.AZURE_SEARCH_INDEX == '' && env.AZURE_SEARCH_INDEX || vars.AZURE_SEARCH_INDEX }}
              AZURE_PRINCIPAL_ID: ${{ secrets.AZURE_PRINCIPAL_ID == '' && env.AZURE_PRINCIPAL_ID || secrets.AZURE_PRINCIPAL_ID }}

              AZURE_OPENAI_CHAT_ENDPOINT: ${{ vars.AZURE_OPENAI_CHAT_ENDPOINT == '' && env.AZURE_OPENAI_CHAT_ENDPOINT || vars.AZURE_OPENAI_CHAT_ENDPOINT }}
              AZURE_OPENAI_EVAL_ENDPOINT: ${{ vars.AZURE_OPENAI_EVAL_ENDPOINT == '' && env.AZURE_OPENAI_CHAT_ENDPOINT || vars.AZURE_OPENAI_EVAL_ENDPOINT }}
              AZURE_OPENAI_CHAT_DEPLOYMENT: ${{ vars.AZURE_OPENAI_CHAT_DEPLOYMENT == '' && env.AZURE_OPENAI_CHAT_DEPLOYMENT || vars.AZURE_OPENAI_CHAT_DEPLOYMENT }}
              AZURE_OPENAI_EVAL_DEPLOYMENT: ${{ vars.AZURE_OPENAI_EVAL_DEPLOYMENT == '' && env.AZURE_OPENAI_CHAT_DEPLOYMENT || vars.AZURE_OPENAI_EVAL_DEPLOYMENT }}

          - name: Dump results
            uses: actions/upload-artifact@v4
            with:
              name: evaluation-results
              path: |
                ${{ env.EVALUATION_RESULTS }}/summary.json
                ${{ env.EVALUATION_RESULTS }}/eval_results.jsonl
                ${{ env.EVALUATION_RESULTS }}/config.json
                ${{ env.EVALUATION_RESULTS }}/eval.png
                ${{ env.EVALUATION_RESULTS }}/mean_score.png
                ${{ env.EVALUATION_RESULTS }}/passing_rate.png
                ${{ env.RED_TEAMING_RESULTS }}/scores.json

          #--------------------------Cleanup--------------------------------

          - name: Cleanup
            if: ${{ inputs.purge == true }}
            run: azd down --force --purge
